}
scale_color_brewer(palette = "Set1") +
vardensities.plt <- for (var in names(train)){
if(var != "target"){
plot_df <- train
plot_df$x <- plot_df[,var]
p <- ggplot(plot_df, aes(x, color = factor(target))) +
geom_density() +
ggtitle(var) +
scale_color_brewer(palette = "Set1") +
print(p)
}
}
vardensities.plt <- for (var in names(train)){
if(var != "target"){
plot_df <- train
plot_df$x <- plot_df[,var]
p <- ggplot(plot_df, aes(x, color = factor(target))) +
geom_density() +
ggtitle(var) +
scale_color_brewer(palette = "Set1") +
print(p)
}
}
```
vardensities.plt <- for (var in names(train)){
if(var != "target"){
plot_df <- train
plot_df$x <- plot_df[,var]
p <- ggplot(plot_df, aes(x, color = factor(target))) +
geom_density() +
ggtitle(var) +
scale_color_brewer(palette = "Set1") +
print(p)
}
}
vardensities.plt
vardensities.plt <- for (var in names(train)){
if(var != "target"){
plot_df <- train
plot_df$x <- plot_df[,var]
p <- ggplot(plot_df, aes(x, color = factor(target))) +
geom_density() +
ggtitle(var) +
scale_color_brewer(palette = "Set1")
print(p)
}
}
vardensities.plt
par(mfrow = (3,4))
par(mfrow = c(3,4))
vardensities.plt
par(mfrow = c(3,4))
vardensities.plt
train %>%
melt() %>%
ggplot() +
geom_density(aes(value, color = variable))
theme(axis.title = element_blank())
vardensities.plt <- for (var in names(train)){
if(var != "target"){
plot_df <- train
plot_df$x <- plot_df[,var]
p <- ggplot(plot_df, aes(x, color = factor(target))) +
geom_density() +
ggtitle(var) +
scale_color_brewer(palette = "Set1") +
theme(axis.title = element_blank())
print(p)
}
}
par(mfrow = c(4,3))
par(mfrow = c(4,3))
vardensities.plt
vardensities.plt
vardensities.plt
vardensities.plt <- for (var in names(train)){
if(var != "target"){
plot_df <- train
plot_df$x <- plot_df[,var]
p <- ggplot(plot_df, aes(x, color = factor(target))) +
geom_density() +
ggtitle(var) +
scale_color_brewer(palette = "Set1") +
theme(axis.title = element_blank())
}
}
par(mfrow = c(4,3))
vardensities.plt
vardensities.plt
vardensities.plt
vardensities.plt <- for (var in names(train)){
if(var != "target"){
plot_df <- train
plot_df$x <- plot_df[,var]
p <- ggplot(plot_df, aes(x, color = factor(target))) +
geom_density() +
ggtitle(var) +
scale_color_brewer(palette = "Set1") +
theme(axis.title = element_blank())
}
}
for (var in names(train)){
if(var != "target"){
plot_df <- train
plot_df$x <- plot_df[,var]
p <- ggplot(plot_df, aes(x, color = factor(target))) +
geom_density() +
ggtitle(var) +
scale_color_brewer(palette = "Set1") +
theme(axis.title = element_blank())
}
}
for (var in colnames(train)){
if(var != "target"){
plot_df <- train
plot_df$x <- plot_df[,var]
p <- ggplot(plot_df, aes(x, color = factor(target))) +
geom_density() +
ggtitle(var) +
scale_color_brewer(palette = "Set1") +
theme(axis.title = element_blank())
}
}
for (var in colnames(train[1:12])){
plot_df <- train
plot_df$x <- plot_df[,var]
p <- ggplot(plot_df, aes(x, color = factor(target))) +
geom_density() +
ggtitle(var) +
scale_color_brewer(palette = "Set1") +
theme(axis.title = element_blank())
}
plot_df <- train
for (var in colnames(train[1:12])){
plot_df <- train
plot_df$x <- plot_df[,var]
plots <- ggplot(plot_df, aes(x, color = factor(target))) +
geom_density() +
ggtitle(var) +
scale_color_brewer(palette = "Set1") +
theme(axis.title = element_blank())
return(plota)
}
for (var in colnames(train[1:12])){
plot_df <- train
plot_df$x <- plot_df[,var]
plots <- ggplot(plot_df, aes(x, color = factor(target))) +
geom_density() +
ggtitle(var) +
scale_color_brewer(palette = "Set1") +
theme(axis.title = element_blank())
return(plots)
}
plots
train[c("rm", "medv", "nox", "lstat", "dis", "ptratio", "age")] %>%
melt() %>%
ggplot() +
geom_density(aes(value, color = variable))
for (var in colnames(train[1:12])){
plot_df <- train
plot_df$x <- plot_df[,var]
plots <- ggplot(plot_df, aes(x, color = factor(target))) +
geom_density() +
ggtitle(var) +
scale_color_brewer(palette = "Set1") +
theme(axis.title = element_blank())
return(plots)
}
train[1:12] %>%
melt() %>%
ggplot() +
geom_density(aes(value, fill = variable)) +
facet_wrap(~ variable, scales = "free") +
labs(title = "Title", subtitle = "Subtitle") +
theme(axis.title = element_blank(),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.title.position = "panel",
plot.subtitle = element_text(hjust = 0.5))
train[1:12] %>%
melt() %>%
ggplot() +
geom_density(aes(value, alpha=.50, fill = variable)) +
facet_wrap(~ variable, scales = "free") +
labs(title = "Title", subtitle = "Subtitle") +
theme(axis.title = element_blank(),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
plot.title.position = "panel",
plot.subtitle = element_text(hjust = 0.5))
library(ggcorrplot)
train %>%
cor() %>%
corrplot(, method = "shade",tl.col = "black", diag = FALSE, type = "lower")
library(ggcorrplot)
train %>%
cor() %>%
corrplot(method = "shade",tl.col = "black", diag = FALSE, type = "lower")
train %>%
corrplot(method = "ellipse",tl.col = "black", diag = FALSE, type = "lower")
train %>%
cor() %>%
corrplot(method = "ellipse",tl.col = "black", diag = FALSE, type = "lower")
train %>%
cor() %>%
corrplot(method = "shade",tl.col = "black", diag = FALSE, type = "lower")
train %>%
cor() %>%
corrplot(method = "",tl.col = "black", diag = FALSE, type = "lower")
train %>%
cor() %>%
corrplot(method = "color",tl.col = "black", diag = FALSE, type = "lower")
train %>%
cor() %>%
corrplot(method = "square",tl.col = "black", diag = FALSE, type = "lower")
ggcorrplot(corr = train, method = "")
ggcorrplot(corr = train, method = "square")
train %>%
cor() %>%
ggcorrplot(method = "square")
ggcorrplot()
train %>%
cor() %>%
ggcorrplot(method = "square", type="lower", theme = theme_minimal() )
?ggcorrplot()
train %>%
cor() %>%
ggcorrplot(method = "square", type="lower", ggtheme = ggplot2::theme_minimal)
train %>%
cor() %>%
corrplot(train, method = "square",tl.col = "black", diag = FALSE, type = "upper")
train %>%
cor() %>%
ggcorrplot(method = "square", type="lower", ggtheme = ggplot2::theme_minimal)
train %>%
cor() %>%
ggcorrplot(method = "square", type="upper", ggtheme = ggplot2::theme_minimal)
train %>%
cor() %>%
ggcorrplot(method = "square", type="upper", ggtheme = ggplot2::theme_minimal, legend.title = "Strength")
train %>%
cor() %>%
ggcorrplot(method = "square", type="upper", ggtheme = ggplot2::theme_minimal, legend.title = "Correlation")
train %>%
cor() %>%
ggcorrplot(method = "square", type="upper", ggtheme = ggplot2::theme_minimal, legend.title = "Influence")
train %>%
cor() %>%
ggcorrplot(method = "square", type="upper", ggtheme = ggplot2::theme_minimal, legend.title = "Influence") + coord_flip()
train %>%
cor() %>%
ggcorrplot(method = "square", type="lower", ggtheme = ggplot2::theme_minimal, legend.title = "Influence") + coord_flip()
train %>%
cor() %>%
ggcorrplot(method = "square", type="upper", ggtheme = ggplot2::theme_minimal, legend.title = "Influence") + coord_flip()
# Function to calculate and set pointrange
xysdu <- function(x) {
m <- mean(x)
ymin <- m - sd(x)
ymax <- m + sd(x)
return(c(y = m, ymin = ymin, ymax = ymax))
}
ptrng.zimlp <- zimlp %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.rdr <- rdr %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
labs(title = "Characteristic Outlier Analysis",
subtitle = "By Preditor Mean & Median",
color = "Legend") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.ta <- ta %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.nc <- nc %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ggarrange(ptrng.rdr, ptrng.zimlp, ptrng.nc, ptrng.ta)
colors <- c("Median" = "Red", "Mean" = "Black")
# Function to calculate and set pointrange
xysdu <- function(x) {
m <- mean(x)
ymin <- m - sd(x)
ymax <- m + sd(x)
return(c(y = m, ymin = ymin, ymax = ymax))
}
colors <- c("Median" = "Red", "Mean" = "Black")
ptrng.zimlp <- zimlp %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.rdr <- rdr %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
labs(title = "Characteristic Outlier Analysis",
subtitle = "By Preditor Mean & Median",
color = "Legend") +
scale_color_manual(values = colors)
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.ta <- ta %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.nc <- nc %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ggarrange(ptrng.rdr, ptrng.zimlp, ptrng.nc, ptrng.ta)
# Function to calculate and set pointrange
xysdu <- function(x) {
m <- mean(x)
ymin <- m - sd(x)
ymax <- m + sd(x)
return(c(y = m, ymin = ymin, ymax = ymax))
}
colors <- c("Median" = "Red", "Mean" = "Black")
ptrng.zimlp <- zimlp %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.rdr <- rdr %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
labs(title = "Characteristic Outlier Analysis",
subtitle = "By Preditor Mean & Median",
color = "Legend") +
scale_color_manual(values = colors) +
theme(axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.ta <- ta %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.nc <- nc %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ggarrange(ptrng.rdr, ptrng.zimlp, ptrng.nc, ptrng.ta)
# Function to calculate and set pointrange
xysdu <- function(x) {
m <- mean(x)
ymin <- m - sd(x)
ymax <- m + sd(x)
return(c(y = m, ymin = ymin, ymax = ymax))
}
colors <- c("Median" = "Red", "Mean" = "Black")
ptrng.zimlp <- zimlp %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.rdr <- rdr %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
labs(title = "Characteristic Outlier Analysis",
subtitle = "By Preditor Mean & Median",
color = "Legend") +
scale_color_manual(values = colors) +
theme(legend.position = "Bottom", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.ta <- ta %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.nc <- nc %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ggarrange(ptrng.rdr, ptrng.zimlp, ptrng.nc, ptrng.ta)
# Function to calculate and set pointrange
xysdu <- function(x) {
m <- mean(x)
ymin <- m - sd(x)
ymax <- m + sd(x)
return(c(y = m, ymin = ymin, ymax = ymax))
}
colors <- c("Median" = "Red", "Mean" = "Black")
ptrng.zimlp <- zimlp %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.rdr <- rdr %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
labs(title = "Characteristic Outlier Analysis",
subtitle = "By Preditor Mean & Median",
caption = "Median in Red & Mean in Black") +
scale_color_manual(values = colors) +
theme(legend.position = "Bottom", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.ta <- ta %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.nc <- nc %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ggarrange(ptrng.rdr, ptrng.zimlp, ptrng.nc, ptrng.ta)
# Function to calculate and set pointrange
xysdu <- function(x) {
m <- mean(x)
ymin <- m - sd(x)
ymax <- m + sd(x)
return(c(y = m, ymin = ymin, ymax = ymax))
}
colors <- c("Median" = "Red", "Mean" = "Black")
ptrng.zimlp <- zimlp %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.rdr <- rdr %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
labs(title = "Characteristic Outlier Analysis",
subtitle = "By Preditor Mean (Black) & Median (Red)") +
scale_color_manual(values = colors) +
theme(legend.position = "Bottom", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.ta <- ta %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.nc <- nc %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ggarrange(ptrng.rdr, ptrng.zimlp, ptrng.nc, ptrng.ta)
# Function to calculate and set pointrange
xysdu <- function(x) {
m <- mean(x)
ymin <- m - sd(x)
ymax <- m + sd(x)
return(c(y = m, ymin = ymin, ymax = ymax))
}
colors <- c("Median" = "Red", "Mean" = "Black")
ptrng.zimlp <- zimlp %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.rdr <- rdr %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
labs(title = "Characteristic Outlier Analysis",
subtitle = "By Preditor Mean & Median") +
scale_color_manual(values = colors) +
theme(legend.position = "Bottom", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.ta <- ta %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ptrng.nc <- nc %>%
melt() %>%
ggplot(aes(variable, value)) + coord_flip() +
stat_summary(fun.data=xysdu, geom = "Pointrange", shape=16, size=.5, color="black") +
stat_summary(fun.y=median, geom="point", shape=16, size=2, color="red") +
theme(legend.position = "None", axis.title.x = element_blank(), axis.title.y = element_blank())
ggarrange(ptrng.rdr, ptrng.zimlp, ptrng.nc, ptrng.ta)
